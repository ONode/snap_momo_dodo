
# GitLab CI Docker Image
image: node:5.9.1
# Build - Build necessary JS files
# Test - Run tests
# Deploy - Deploy application to S3/ElasticBeanstalk
stages:
  - build
  - test
  - deploy

# Configuration
variables:
  AWS_ACCESS_KEY_ID: "" # Should have access to both S3/EB
  AWS_SECRET_ACCESS_KEY: ""
  AWS_DEFAULT_REGION: "us-east-1" # Or, wherever you are
  EB_APP_NAME: "" # ElasticBeanstalk Application Name
  EB_APP_ENV: "" # ElasticBeanstalk Application Environment
  S3_BUCKET: "" # S3 bucket for ElasticBeanstalk
  S3_KEY: "" # S3 folder to upload built app

cache:
  paths:
  - node_modules/

test:
  script:
  # this configures django application to use attached postgres database that is run on `postgres` host
  # export DATABASE_URL=postgres://postgres:@postgres:5432/python-test-app
  - apt-get update -qy
  - apt-get install -y python-dev python-pip
  - pip install -r requirements.txt
  - python manage.py test

staging:
  type: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=gitlab-ci-python-test-staging --api-key=$HEROKU_STAGING_API_KEY
  only:
  - master

production:
  type: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=gitlab-ci-python-test-prod --api-key=$HEROKU_PRODUCTION_API_KEY
  only:
  - tags
